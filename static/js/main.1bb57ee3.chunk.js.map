{"version":3,"sources":["components/Square.js","components/Board.js","components/PieceButton.js","components/PieceSelection.js","App.js","reportWebVitals.js","index.js"],"names":["Square","color","square_id","piece_value","add_piece","style","backgroundColor","className","onClick","Board","board_state","items","i","Math","floor","push","toString","PieceButton","piece_id","handleChange","selected_id","type","id","name","onChange","value","checked","htmlFor","PieceSelection","selected_piece","piece_components","map","piece_char","App","useState","set_piece","initial_board_values","Array","fill","set_board_state","console","log","temp_state","slice","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAkBeA,EAdA,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAC7C,OACI,qBACIC,MAAO,CAAEC,gBAAiBL,GAE1BM,UAAU,SACVC,QAAS,kBAAMJ,EAAUF,IAJ7B,SAMKC,GAJKD,ICeHO,EApBD,SAAC,GAGX,IAHyC,IAA7BC,EAA4B,EAA5BA,YAAaN,EAAe,EAAfA,UACnBO,EAAQ,GAELC,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,IAAIX,EAAQ,QAGRA,EAFQY,KAAKC,MAAMF,EAAI,GACjB,IAAM,EACJA,EAAI,IAAM,EAAI,QAAU,QAExBA,EAAI,IAAM,EAAI,QAAU,QAEpCD,EAAMI,KAAK,cAAC,EAAD,CAAQd,MAAOA,EAA0BC,UAAWU,EAAGT,YAAaO,EAAYE,GAAIR,UAAWA,GAApEQ,EAAEI,aAE5C,OACI,qBAAKT,UAAU,QAAf,SACKI,K,OCCEM,EAjBK,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAC3C,OACI,qCACI,uBACIC,KAAK,QACLC,GAAIJ,EACJK,KAAK,QACLC,SAAUL,EACVM,MAAOP,EACPQ,QAASN,IAAgBF,IAE7B,uBAAOS,QAAST,EAAhB,SAA2BA,IAC3B,2BCMGU,EAjBQ,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,eAAgBV,EAAmB,EAAnBA,aAEhCW,EADM,YAAO,4EACaC,KAAI,SAAAC,GAChC,OAAO,cAAC,EAAD,CACKd,SAAUc,EACVb,aAAcA,EACdC,YAAaS,GACRG,MAGrB,OACI,8BACKF,KCuBEG,MAjCf,WACE,MAAoCC,mBAAS,IAA7C,mBAAOL,EAAP,KAAuBM,EAAvB,KAEMC,EAAuBC,MAAM,IAAIC,KAAK,KAC5C,EAAuCJ,mBAASE,GAAhD,mBAAO1B,EAAP,KAAoB6B,EAApB,KAeA,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,CACEG,YAAaA,EACbN,UAZY,SAACF,GACjBsC,QAAQC,IAAI,iCACZ,IAAIC,EAAahC,EAAYiC,QAC7BD,EAAWxC,GAAa2B,EACxBU,EAAgBG,MAUd,cAAC,EAAD,CACEb,eAAgBA,EAChBV,aArBe,SAACyB,GACpBJ,QAAQC,IAAI,YAAaG,EAAEC,OAAOpB,OAClCU,EAAUS,EAAEC,OAAOpB,cCDRqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1bb57ee3.chunk.js","sourcesContent":["// rafce to create the skeleton\n\nimport React from 'react'\n\nconst Square = ({ color, square_id, piece_value, add_piece }) => {\n    return (\n        <div\n            style={{ backgroundColor: color }}\n            key={ square_id }\n            className='square'\n            onClick={() => add_piece(square_id)}\n        >\n            {piece_value}\n        </div>\n    )\n}\n\n\nexport default Square\n","import React from 'react'\nimport Square from './Square'\n\nconst Board = ({board_state, add_piece}) => {\n    const items = []\n\n    for (let i = 0; i < 64; i++) {\n        let color = 'white';\n        const row = Math.floor(i / 8);\n        if (row % 2 === 0) {\n            color = i % 2 === 1 ? 'black' : 'white';\n        } else {\n            color = i % 2 === 1 ? 'white' : 'black';\n        }\n        items.push(<Square color={color} key={i.toString()} square_id={i} piece_value={board_state[i]} add_piece={add_piece} />)\n    }\n    return (\n        <div className='board'>\n            {items}\n        </div>\n    )\n}\n\nexport default Board","import React from 'react'\n\nconst PieceButton = ({ piece_id, handleChange, selected_id }) => {\n    return (\n        <>\n            <input\n                type=\"radio\" \n                id={piece_id}\n                name=\"piece\" \n                onChange={handleChange} \n                value={piece_id}\n                checked={selected_id === piece_id}\n            />\n            <label htmlFor={piece_id}>{piece_id}</label>\n            <br />\n        </>\n    )\n}\n\nexport default PieceButton","import React from 'react'\nimport PieceButton from './PieceButton'\n\nconst PieceSelection = ({ selected_piece, handleChange }) => {\n    const pieces = [...\"♙♖♘♗♕♔♟♜♞♝♛♚\"]\n    const piece_components = pieces.map(piece_char => {\n        return <PieceButton \n                    piece_id={piece_char}\n                    handleChange={handleChange}\n                    selected_id={selected_piece}\n                    key={piece_char}\n                />\n    })\n    return (\n        <div>\n            {piece_components}\n        </div>\n    )\n}\n\nexport default PieceSelection","import { useState } from 'react'\nimport './App.css';\nimport Board from './components/Board';\nimport PieceSelection from './components/PieceSelection';\n\nfunction App() {\n  const [selected_piece, set_piece] = useState(\"\")\n\n  const initial_board_values = Array(64).fill(\" \");\n  const [board_state, set_board_state] = useState(initial_board_values)\n\n  const handleChange = (e) => {\n    console.log('selected ', e.target.value)\n    set_piece(e.target.value)\n  }\n  \n  const add_piece = (square_id) => {\n    console.log('Adding {piece} to {square_id}')\n    var temp_state = board_state.slice()\n    temp_state[square_id] = selected_piece\n    set_board_state(temp_state)\n    // set_board_state([board_state, board_state[square_id] = selected_piece])\n  }\n\n  return (\n    <div className=\"App\">\n      <Board\n        board_state={board_state}\n        add_piece={add_piece}\n      />\n      <PieceSelection \n        selected_piece={selected_piece}\n        handleChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}